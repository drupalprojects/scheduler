<?php

/**
 * @file
 * Installation file for Scheduler module.
 */

/**
 * Implements hook_schema().
 */
function scheduler_schema() {
  return array(
    'scheduler' => array(
      'description' => 'The main table to hold the scheduler data.',
      'fields' => array(
        'nid' => array(
          'description' => 'The foreign key to node.nid',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
        ),
        'publish_on' => array(
          'description' => 'The UNIX UTC timestamp when to publish',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 0,
        ),
        'unpublish_on' => array(
          'description' => 'The UNIX UTC timestamp when to unpublish',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 0,
        ),
      ),
      'indexes' => array(
        'scheduler_publish_on' => array('publish_on'),
        'scheduler_unpublish_on' => array('unpublish_on'),
      ),
      'primary key' => array('nid'),
    ),
  );
}

/**
 * Implements hook_install().
 */
function scheduler_install() {
  // Set up default configuration for each node type.
  foreach (node_type_get_types() as $type) {
    \Drupal::config('scheduler.type.' . $type->type)
      ->set('publish_enable', 0)
      ->set('publish_required', 0)
      ->set('publish_revision',0)
      ->set('publish_touch',0)
      ->set('unpublish_enable',0)
      ->set('unpublish_required',0)
      ->set('unpublish_revision',0)
      ->save();
  }
}

/**
 * Implements hook_update_last_removed().
 */
function scheduler_update_last_removed() {
  // The updates for Scheduler 6.x are no longer required in this file.
  // This function shows that the last update was scheduler_update_6101.
  return 6101;
}

/**
 * Convert variables to config.
 */
function scheduler_update_8000() {
  update_variables_to_config('scheduler.settings', array(
    'scheduler_date_format' => 'date_format',
    'scheduler_date_format_long' => 'date_format_long',
    'scheduler_extra_info' => 'extra_info',
    'scheduler_field_type' => 'field_type',
    'scheduler_lightweight_log' => 'lightweight_log',
  ));

  $types = db_query('SELECT type FROM {node_type}')->fetchCol();
  foreach ($types as $type) {
    update_variables_to_config('scheduler.type.' . $type, array(
      'scheduler_publish_enable_' . $type => 'publish_enable',
      'scheduler_publish_required_' . $type => 'publish_required',
      'scheduler_publish_revision_' . $type => 'publish_revision',
      'scheduler_publish_touch_' . $type => 'publish_touch',
      'scheduler_unpublish_enable_' . $type => 'unpublish_enable',
      'scheduler_unpublish_required_' . $type => 'unpublish_required',
      'scheduler_unpublish_revision_' . $type => 'unpublish_revision',
    ));
  }
}
